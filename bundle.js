(function (React, ReactDOM, d3) {
  'use strict';

  var React__default = 'default' in React ? React['default'] : React;
  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  const csvUrl = "https://gist.githubusercontent.com/Richard-Burd/1554b4f94639c3a69f4c4b58f1ee4f3d/raw/cssNamedColors.csv"; 

  const width = 960;
  const height = 500;
  const centerX = width / 2;
  const centerY = height / 2;

  const pieArc = d3.arc()
  	.outerRadius(width);

  const App = () => {
    const [data, setData] = React.useState(null);
    
    React.useEffect(()=> {
      d3.csv(csvUrl).then(setData);  
    }, []);

    if (!data) {
    	return React__default.createElement( 'pre', null, "Loading..." )
    }
    
    // return data.map(d => <div style={{backgroundColor: d['RGB hex value'], width: '960px', height: '4px'}} />)
    return (
    	React__default.createElement( 'svg', { width: width, height: height },
        React__default.createElement( 'g', { transform: `translate(${centerX}, ${centerY})` },
          data.map((d, i) => (
            React__default.createElement( 'path', { 
              fill: (i % 2 == 0) ? d['RGB hex value'] : 'black', 'fill-opacity': (i % 2 == 0) ? `${40 / i}` : '1', d: pieArc({
                innerRadius: `${i + 0.3}`,
              	startAngle: i / data.length * 2 * Math.PI,
                endAngle: ((i + 1) / data.length) * 2 * Math.PI
              }) })
          ))
        )
      )
    );
  };

  const rootElement = document.getElementById('root');
  ReactDOM.render(React__default.createElement( App, null ), rootElement);

}(React, ReactDOM, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHsgY3N2LCBhcmMgfSBmcm9tICdkMyc7XG5cbmNvbnN0IGNzdlVybCA9IFwiaHR0cHM6Ly9naXN0LmdpdGh1YnVzZXJjb250ZW50LmNvbS9SaWNoYXJkLUJ1cmQvMTU1NGI0Zjk0NjM5YzNhNjlmNGM0YjU4ZjFlZTRmM2QvcmF3L2Nzc05hbWVkQ29sb3JzLmNzdlwiIFxuXG5jb25zdCB3aWR0aCA9IDk2MDtcbmNvbnN0IGhlaWdodCA9IDUwMDtcbmNvbnN0IGNlbnRlclggPSB3aWR0aCAvIDI7XG5jb25zdCBjZW50ZXJZID0gaGVpZ2h0IC8gMjtcblxuY29uc3QgcGllQXJjID0gYXJjKClcblx0Lm91dGVyUmFkaXVzKHdpZHRoKVxuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG4gIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlKG51bGwpO1xuICBcbiAgdXNlRWZmZWN0KCgpPT4ge1xuICAgIGNzdihjc3ZVcmwpLnRoZW4oc2V0RGF0YSk7ICBcbiAgfSwgW10pO1xuXG4gIGlmICghZGF0YSkge1xuICBcdHJldHVybiA8cHJlPkxvYWRpbmcuLi48L3ByZT5cbiAgfVxuICBcbiAgLy8gcmV0dXJuIGRhdGEubWFwKGQgPT4gPGRpdiBzdHlsZT17e2JhY2tncm91bmRDb2xvcjogZFsnUkdCIGhleCB2YWx1ZSddLCB3aWR0aDogJzk2MHB4JywgaGVpZ2h0OiAnNHB4J319IC8+KVxuICByZXR1cm4gKFxuICBcdDxzdmcgd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0+XG4gICAgICA8ZyB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtjZW50ZXJYfSwgJHtjZW50ZXJZfSlgfT5cbiAgICAgICAge2RhdGEubWFwKChkLCBpKSA9PiAoXG4gICAgICAgICAgPHBhdGggXG4gICAgICAgICAgICBmaWxsPXsoaSAlIDIgPT0gMCkgPyBkWydSR0IgaGV4IHZhbHVlJ10gOiAnYmxhY2snfVxuICAgICAgICAgICAgZmlsbC1vcGFjaXR5PXsoaSAlIDIgPT0gMCkgPyBgJHs0MCAvIGl9YCA6ICcxJ31cbiAgICAgICAgICAgIGQ9e3BpZUFyYyh7XG4gICAgICAgICAgICAgIGlubmVyUmFkaXVzOiBgJHtpICsgMC4zfWAsXG4gICAgICAgICAgICBcdHN0YXJ0QW5nbGU6IGkgLyBkYXRhLmxlbmd0aCAqIDIgKiBNYXRoLlBJLFxuICAgICAgICAgICAgICBlbmRBbmdsZTogKChpICsgMSkgLyBkYXRhLmxlbmd0aCkgKiAyICogTWF0aC5QSVxuICAgICAgICAgICAgfSl9IFxuICAgICAgICAgIC8+XG4gICAgICAgICkpfVxuICAgICAgPC9nPlxuICAgIDwvc3ZnPlxuICApO1xufTtcblxuY29uc3Qgcm9vdEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpO1xuUmVhY3RET00ucmVuZGVyKDxBcHAgLz4sIHJvb3RFbGVtZW50KTsiXSwibmFtZXMiOlsiYXJjIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJjc3YiLCJSZWFjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0VBSUEsTUFBTSxNQUFNLEdBQUcsMEdBQXlHO0FBQ3hIO0VBQ0EsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDO0VBQ2xCLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQztFQUNuQixNQUFNLE9BQU8sR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0VBQzFCLE1BQU0sT0FBTyxHQUFHLE1BQU0sR0FBRyxDQUFDLENBQUM7QUFDM0I7RUFDQSxNQUFNLE1BQU0sR0FBR0EsTUFBRyxFQUFFO0VBQ3BCLEVBQUUsV0FBVyxDQUFDLEtBQUssRUFBQztBQUNwQjtFQUNBLE1BQU0sR0FBRyxHQUFHLE1BQU07RUFDbEIsRUFBRSxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHQyxjQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDekM7RUFDQSxFQUFFQyxlQUFTLENBQUMsS0FBSztFQUNqQixJQUFJQyxNQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0VBQzlCLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUNUO0VBQ0EsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFO0VBQ2IsR0FBRyxPQUFPQywyQ0FBSyxZQUFVLEVBQU07RUFDL0IsR0FBRztFQUNIO0VBQ0E7RUFDQSxFQUFFO0VBQ0YsR0FBR0EsdUNBQUssT0FBTyxLQUFNLEVBQUMsUUFBUTtFQUM5QixNQUFNQSxxQ0FBRyxXQUFXLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7RUFDdEQsUUFBUyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7RUFDdkIsVUFBVUE7RUFDVixZQUFZLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsZUFBZSxDQUFDLEdBQUcsT0FBUSxFQUNsRCxnQkFBYyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFJLEVBQy9DLEdBQUcsTUFBTSxDQUFDO0VBQ3RCLGNBQWMsV0FBVyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7RUFDdkMsYUFBYSxVQUFVLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFO0VBQ3RELGNBQWMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFO0VBQzdELGFBQWEsR0FBRSxDQUNIO0VBQ1osU0FBUyxDQUFFO0VBQ1gsT0FBVTtFQUNWLEtBQVU7RUFDVixJQUFJO0VBQ0osQ0FBQyxDQUFDO0FBQ0Y7RUFDQSxNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0VBQ3BELFFBQVEsQ0FBQyxNQUFNLENBQUNBLDhCQUFDLFNBQUcsRUFBRyxFQUFFLFdBQVcsQ0FBQzs7OzsifQ==